<form class="flex" data-controller="tag-query">
  <div class="flex gap-2 w-full">
    <label class="input">
      <svg class="h-[2em] opacity-50" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
        <g stroke-linejoin="round" stroke-linecap="round" stroke-width="2.5" fill="none" stroke="currentColor">
          <circle cx="11" cy="11" r="8"></circle>
          <path d="m21 21-4.3-4.3"></path>
        </g>
      </svg>
      <input 
        class="grow" 
        name="search" 
        placeholder="태그 이름 검색.." 
        data-action="keyup->tag-query#onSearch" 
        data-debounce-ms="500" 
        value="{{query('search')}}"/>
      <kbd class="kbd kbd-sm">⌘</kbd>
      <kbd class="kbd kbd-sm">K</kbd>
    </label>

    <select class="select max-w-[100px]" name="orderBy" data-action="tag-query#onChangeOrderBy">
      <option {{ query('orderBy') === 'desc' && 'selected' }} value="desc">최신</option>
      <option {{ query('orderBy') === 'asc' && 'selected' }} value="asc">오래된</option>
    </select>
  </div>
</form>

@pushOnceTo('tagQueryJs')
<script defer>
  window.addEventListener('DOMContentLoaded', () => {
    window.Stimulus.register('tag-query', class extends window.StimulusController {
      connect() {
        console.log('hello world');
        this.searchTimeout = null;
      }

      onSearch(event) {
        const debounceMs = parseInt(event.target.dataset.debounceMs) || 500;
        
        clearTimeout(this.searchTimeout);
        this.searchTimeout = setTimeout(() => {
          this.navigateWithFormData();
        }, debounceMs);
      }

      onChangeOrderBy() {
        this.navigateWithFormData();
      }

      navigateWithFormData() {
        const formData = new FormData(this.element);
        const params = new URLSearchParams();
        
        for (const [key, value] of formData.entries()) {
          if (value && value.toString().trim() !== '') {
            params.append(key, value.toString());
          }
        }
        
        const currentUrl = new URL(window.location.href);
        const newUrl = `${currentUrl.pathname}?${params.toString()}`;

        document.querySelector('#tagListFrame').src = newUrl;
        history.replaceState({}, '', newUrl);
      }
    })
  })
</script>
@end